A **HR Portal** kalkul√°torainak tesztel√©s√©hez k√ºl√∂nb√∂z≈ë tesztel√©si megk√∂zel√≠t√©sek alkalmazhat√≥k att√≥l f√ºgg≈ëen, hogy funkcion√°lis, teljes√≠tm√©ny- vagy biztons√°gi tesztet szeretn√©l v√©gezni.  

---

## **1Ô∏è‚É£ Funkcion√°lis tesztel√©s (Automatiz√°lt UI teszt)**  
Ha azt szeretn√©d ellen≈ërizni, hogy a kalkul√°tor megfelel≈ëen m≈±k√∂dik, akkor egy **automatiz√°lt UI teszt** j√≥ megold√°s lehet.  

### **üìå Selenium + C# megold√°s**  
A k√∂vetkez≈ë p√©lda Selenium WebDriver haszn√°lat√°val mutatja be, hogyan lehet egy kalkul√°tort tesztelni.  

#### **üîπ L√©p√©sek:**  
1. Megnyitja a HR Portal kalkul√°tort.  
2. Kit√∂lti a mez≈ëket.  
3. Ellen≈ërzi, hogy az eredm√©ny megjelenik-e √©s helyes-e.  

#### **üîπ K√≥d:**
```csharp
using System;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support.UI;
using NUnit.Framework;

[TestFixture]
public class HRPortalCalculatorTests
{
    private IWebDriver driver;

    [SetUp]
    public void Setup()
    {
        driver = new ChromeDriver();
        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(10);
    }

    [Test]
    public void CalculateNetSalary_ShouldReturn_ExpectedResult()
    {
        driver.Navigate().GoToUrl("http://www.hrportal.hu/kalkulatorok");

        // V√°laszd ki a megfelel≈ë kalkul√°tort (pl. Nett√≥ b√©r kalkul√°tor)
        driver.FindElement(By.LinkText("Nett√≥ b√©r kalkul√°tor")).Click();

        // √çrd be a brutt√≥ b√©rt
        var salaryInput = driver.FindElement(By.Id("brutto"));
        salaryInput.Clear();
        salaryInput.SendKeys("500000");

        // Kattints a "Sz√°mol" gombra
        driver.FindElement(By.Id("calculate-button")).Click();

        // Eredm√©ny ellen≈ërz√©se
        var result = driver.FindElement(By.Id("netto-ber")).Text;
        Assert.IsTrue(result.Contains("333000"), "Az elv√°rt nett√≥ b√©r nem egyezik.");
    }

    [TearDown]
    public void TearDown()
    {
        driver.Quit();
    }
}
```
**üîπ Mit csin√°l a fenti k√≥d?**  
‚úÖ Megnyitja a HR Portal kalkul√°tort.  
‚úÖ Be√≠r egy brutt√≥ b√©rt (500 000 Ft).  
‚úÖ Elind√≠tja a kalkul√°ci√≥t.  
‚úÖ Ellen≈ërzi, hogy a v√°rt nett√≥ √∂sszeg megjelenik-e.

---

## **2Ô∏è‚É£ API vagy h√°tt√©rrendszer tesztel√©se**  
Ha a kalkul√°tor h√°tt√©rben egy API-t haszn√°l, akkor az API k√∂zvetlen tesztel√©se **Postman, RestSharp vagy HttpClient** seg√≠ts√©g√©vel is elv√©gezhet≈ë.

üìå **C# API teszt p√©lda (RestSharp haszn√°lat√°val):**
```csharp
using NUnit.Framework;
using RestSharp;
using System.Threading.Tasks;

[TestFixture]
public class CalculatorApiTests
{
    private const string BaseUrl = "http://www.hrportal.hu/api"; // Ezt ellen≈ërizni kell

    [Test]
    public async Task GetNetSalary_ShouldReturn_CorrectAmount()
    {
        var client = new RestClient(BaseUrl);
        var request = new RestRequest("/calculate-netto", Method.Get);
        request.AddParameter("brutto", 500000);

        var response = await client.ExecuteAsync(request);
        Assert.IsTrue(response.Content.Contains("333000"), "Az API √°ltal visszaadott nett√≥ b√©r nem megfelel≈ë.");
    }
}
```
üîπ **El≈ëny:** Az API teszt gyorsabb √©s pontosabb, ha van k√∂zvetlen v√©gpont.  

---

## **3Ô∏è‚É£ Terhel√©ses tesztel√©s (Load Testing)**
A **terhel√©ses tesztel√©s** seg√≠t meg√°llap√≠tani, hogy a kalkul√°tor nagy forgalom eset√©n is megfelel≈ëen m≈±k√∂dik-e.  

üìå **K6 p√©lda:**
```js
import http from 'k6/http';
import { check, sleep } from 'k6';

export let options = {
  vus: 50, // 50 egyidej≈± felhaszn√°l√≥
  duration: '30s', // 30 m√°sodpercig fut
};

export default function () {
  let res = http.get('http://www.hrportal.hu/kalkulatorok');
  check(res, { 'status was 200': (r) => r.status == 200 });
  sleep(1);
}
```
üîπ **Mit csin√°l?**  
‚úÖ 50 felhaszn√°l√≥ egyszerre haszn√°lja a kalkul√°tort 30 m√°sodpercig.  
‚úÖ Ellen≈ërzi, hogy az oldal v√°laszideje megfelel≈ë-e.  

---

## **4Ô∏è‚É£ Biztons√°gi tesztel√©s**  
A **biztons√°gi tesztel√©s** seg√≠t az √©rz√©keny adatok v√©delm√©nek ellen≈ërz√©s√©ben. Ehhez **OWASP ZAP** vagy **Burp Suite** haszn√°lhat√≥.  

üìå **Tesztelend≈ë ter√ºletek:**  
- **SQL injection**: Kipr√≥b√°lhatod, hogy be√≠rhat√≥-e `' OR '1'='1` egy mez≈ëbe.  
- **Cross-Site Scripting (XSS)**: Megpr√≥b√°lhatod `<script>alert('XSS')</script>` be√≠r√°s√°t.  

---

## **√ñsszegz√©s**
| Tesztel√©si t√≠pus | Megold√°s |
|------------------|----------|
| **UI funkcion√°lis teszt** | Selenium WebDriver + C# |
| **API teszt** | RestSharp vagy Postman |
| **Terhel√©ses teszt** | K6 vagy JMeter |
| **Biztons√°gi teszt** | OWASP ZAP, Burp Suite |

Ha egy teljes k√∂r≈± tesztel√©st szeretn√©l elv√©gezni, √©rdemes t√∂bb m√≥dszert is kombin√°lni! üöÄ

